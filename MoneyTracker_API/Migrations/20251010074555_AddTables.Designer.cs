// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyTracker_API.Data;

#nullable disable

namespace MoneyTracker_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251010074555_AddTables")]
    partial class AddTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoneyTracker_API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SubcategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Employment income",
                            Name = "Salary",
                            SubcategoryId = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Freelance work",
                            Name = "Freelance",
                            SubcategoryId = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Investment returns",
                            Name = "Investment",
                            SubcategoryId = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Stock market investments",
                            Name = "Stocks",
                            ParentCategoryId = 3,
                            SubcategoryId = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 5,
                            Description = "Dividend income",
                            Name = "Dividends",
                            ParentCategoryId = 3,
                            SubcategoryId = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 6,
                            Description = "Food and dining",
                            Name = "Food",
                            SubcategoryId = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            Description = "Transport costs",
                            Name = "Transportation",
                            SubcategoryId = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 8,
                            Description = "Bills and utilities",
                            Name = "Utilities",
                            SubcategoryId = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 9,
                            Description = "Entertainment expenses",
                            Name = "Entertainment",
                            SubcategoryId = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 10,
                            Description = "Grocery shopping",
                            Name = "Groceries",
                            ParentCategoryId = 6,
                            SubcategoryId = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 11,
                            Description = "Dining out",
                            Name = "Restaurants",
                            ParentCategoryId = 6,
                            SubcategoryId = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 12,
                            Description = "Vehicle fuel",
                            Name = "Fuel",
                            ParentCategoryId = 7,
                            SubcategoryId = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 13,
                            Description = "Bus, train, etc.",
                            Name = "Public Transport",
                            ParentCategoryId = 7,
                            SubcategoryId = 0,
                            Type = 1
                        });
                });

            modelBuilder.Entity("MoneyTracker_API.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("bit");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecurrenceEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RecurrenceType")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("MoneyTracker_API.Models.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("bit");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecurrenceEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RecurrenceType")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("MoneyTracker_API.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Physical cash",
                            Name = "Cash"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Credit card payments",
                            Name = "Credit Card"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Direct bank transfer",
                            Name = "Bank Transfer"
                        },
                        new
                        {
                            Id = 4,
                            Description = "E-wallet payments",
                            Name = "Digital Wallet"
                        });
                });

            modelBuilder.Entity("MoneyTracker_API.Models.Category", b =>
                {
                    b.HasOne("MoneyTracker_API.Models.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("MoneyTracker_API.Models.Expense", b =>
                {
                    b.HasOne("MoneyTracker_API.Models.Category", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MoneyTracker_API.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Expenses")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("MoneyTracker_API.Models.Income", b =>
                {
                    b.HasOne("MoneyTracker_API.Models.Category", "Category")
                        .WithMany("Incomes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MoneyTracker_API.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Incomes")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("MoneyTracker_API.Models.Category", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Incomes");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("MoneyTracker_API.Models.PaymentMethod", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Incomes");
                });
#pragma warning restore 612, 618
        }
    }
}
